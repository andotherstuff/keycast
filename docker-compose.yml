services:
  api:
    build: .
    command: api
    ports:
      - "3000:3000"
    volumes:
      - ./database:/app/database
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh", "api"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - app_network

  web:
    build: .
    command: web
    ports:
      - "5173:5173"
    depends_on:
      api:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - WAIT_FOR_API=true
      - HOST=0.0.0.0
      - PORT=5173
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh", "web"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - app_network

  caddy:
      image: caddy:2
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ./Caddyfile:/etc/caddy/Caddyfile:ro
        - caddy_data:/data
        - caddy_config:/config
      depends_on:
        api:
          condition: service_healthy
        web:
          condition: service_healthy
      restart: unless-stopped
      healthcheck:
        test: ["CMD", "caddy", "version"]
        interval: 30s
        timeout: 10s
        retries: 3
      logging:
        driver: "json-file"
        options:
          max-size: "10m"
          max-file: "3"
      networks:
        - app_network

volumes:
  caddy_data:
  caddy_config:

networks:
  app_network:
    driver: bridge
