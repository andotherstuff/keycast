{
  "permissions": {
    "allow": [
      "Bash(sqlite3:*)",
      "Bash(gcloud run revisions describe:*)",
      "Bash(pkill:*)",
      "Bash(chmod:*)",
      "Bash(./test-local.sh:*)",
      "Bash(tee:*)",
      "Bash(docker-compose:*)",
      "Bash(./tests/integration/test-api.sh:*)",
      "Bash(BASE_URL=https://oauth.divine.video API_URL=https://oauth.divine.video ./tests/e2e/test-frontend.sh)",
      "Bash(sqlx migrate run:*)",
      "Bash(cargo build:*)",
      "Bash(CORS_ALLOWED_ORIGIN=\"http://localhost:8080\" curl -X POST http://localhost:3000/api/auth/register )",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "Bash(WEB_BUILD_DIR=./web/build cargo run --bin keycast_api)",
      "Bash(python3:*)",
      "Bash(grep:*)",
      "Bash(gcloud secrets list:*)",
      "Bash(openssl rand:*)",
      "Bash(gcloud secrets create:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: add personal authentication with auto-login and embeddable CORS\n\n- Add email/password registration with automatic JWT token generation\n- Implement login endpoint with JWT-based authentication  \n- Add NIP-46 bunker URL generation for authenticated users\n- Configure JWT_SECRET via environment variable with Secret Manager integration\n- Update CORS to allow all origins for embeddable authentication flows\n- Add database migrations for personal auth (users.email, users.password_hash, personal_keys table)\n- Integrate with GCP KMS for encrypting user secret keys\n- Add test client HTML page demonstrating complete auth flow\n- Update cloudbuild.yaml to inject JWT_SECRET from Google Secret Manager\n\nNew API endpoints:\n- POST /api/auth/register - Register and auto-login\n- POST /api/auth/login - Manual login\n- GET /api/user/bunker - Get NIP-46 bunker URL (requires auth)\n\nSecurity:\n- Passwords hashed with bcrypt\n- JWT tokens with 24-hour expiration\n- User secret keys encrypted with GCP KMS\n- JWT_SECRET stored in Google Secret Manager\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git checkout:*)",
      "Bash(cargo:*)",
      "Bash(git add:*)",
      "Bash(open examples/nostr-client-full.html)",
      "Bash(open examples/nostr-client-enhanced.html)"
    ],
    "deny": [],
    "ask": []
  }
}