# ABOUTME: GitHub Actions CI/CD workflow for Keycast testing
# ABOUTME: Runs tests on every push and pull request with proper environment setup

name: Test

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: keycast_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: clippy, rustfmt

    - name: Setup test environment
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/keycast_test
        PGPASSWORD: postgres
      run: |
        # Generate master key
        chmod +x scripts/generate_key.sh
        ./scripts/generate_key.sh

        # Run migrations
        cargo install sqlx-cli --no-default-features --features postgres
        sqlx migrate run --database-url $DATABASE_URL --source database/migrations

    - name: Run tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/keycast_test
      run: cargo test --workspace --verbose
    
    - name: Run clippy
      run: cargo clippy --workspace --all-targets --all-features -- -D warnings
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Build release
      run: cargo build --release --workspace

  # Test with Google Cloud KMS integration (optional)
  test-gcp:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: keycast_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: openvine-co
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Setup test environment
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/keycast_test
        PGPASSWORD: postgres
      run: |
        # Generate master key (will use GCP KMS)
        chmod +x scripts/generate_key.sh
        ./scripts/generate_key.sh

        # Run migrations
        cargo install sqlx-cli --no-default-features --features postgres
        sqlx migrate run --database-url $DATABASE_URL --source database/migrations

    - name: Run GCP KMS tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/keycast_test
        USE_GCP_KMS: true
        GCP_PROJECT_ID: openvine-co
        GCP_KMS_LOCATION: global
        GCP_KMS_KEY_RING: keycast-keys
        GCP_KMS_KEY_NAME: master-key
      run: |
        # Only run GCP-specific tests
        cargo test --workspace gcp_key_manager --verbose